snippet formik "formik form"
<Formik
	initialValues={$1}
	onSubmit={(values, {setSubmitting, resetForm}) => {
		${2:// submit here}
	}}
>
{({
	values,
	handleChange,
	handleSubmit,
	isSubmitting,
	errors,
	touched
}) => (
	${4:// form here}
)
}$3
</Formik>
endsnippet

snippet semuiselect "semantic-ui select"
<Select
	${1:fluid}
	id="$2"
	label="$3"
	placeholder="$4"
	options={$5}
	value={$6}
	onChange={(e, {value}) => $7}
	${8:required}
	${9:search}
	error={Boolean($10)}
/>
endsnippet

snippet semuiinput "semantic-ui input"
<Input
	${1:fluid}
	id="$2"
	label="$3"
	placeholder="$4"
	value={$5}
	${6:type="$7"}
	${8:step={$9}}
	${10:list="$11"}
	onChange={${12:handleChange}}
	${13:required}
	error={Boolean($14)}
/>
endsnippet

snippet semuicheckbox "semantic-ui checkbox"
<Checkbox
	checked={$1}
	label="$2"
	onChange={(e, {checked}) => $3}
/>
endsnippet

snippet semuibutton "semantic-ui button"
<Button
	${1:fluid}
	${2:disabled={$3}}
	${4:positive}
	${5:size="$6"}
	${7:type="$8"}
>
	${9:OK}
</Button>
endsnippet

snippet fun "react fun"
${1:name} = ${2:async }($3) => {
	$4
}
endsnippet

snippet spaexpress "express thing started with cookie session and morgan"
const express = require('express')
const path = require('path')
const cookieParser = require('cookie-parser')
const session = require('express-session')
const logger = require('morgan')

const PORT = process.env.PORT || 3001
const app = express()
app.use(logger('dev'))
app.use(express.json())
app.use(express.urlencoded({extended: false}))
app.use(cookieParser())
app.use('/static', express.static(path.join(__dirname, './build/static')))

app.use(session({secret: '${1:super-secret-session-key}'}))

app.get('/', (_req, res) =>
  res.sendFile(path.join(__dirname, 'build', 'index.html')),
)

${2:// server implementation here}

app.listen(PORT, () => console.log(\`Listening on port ${PORT}\`))
endsnippet

snippet express-route "route for express"
app.${1:get}('$2', ${3:async }(req, res$4) => {
	$5
})
endsnippet
